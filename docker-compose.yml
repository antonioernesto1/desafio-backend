version: '3.8'

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  motorcycle-rental-api:
    build:
      context: ./MotorcycleRental
      dockerfile: src/Presentation/MotorcycleRental.API/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ConnectionStrings__Default=Host=postgres;Port=5432;Database=${POSTGRES_DB};User Id=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - ConnectionStrings__MongoDB=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongo:27017
      - RabbitMq__Host=rabbitmq
      - RabbitMq__User=${RABBITMQ_USER}
      - RabbitMq__Password=${RABBITMQ_PASSWORD}
      - Storage__Local__BasePath=/app/fotos
    volumes:
      - ./fotos:/app/fotos
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_healthy

  motorcycle-consumer:
    build:
      context: ./MotorcycleRental
      dockerfile: src/Workers/Consumers/MotorcycleConsumer/Dockerfile
    environment:
      - ConnectionStrings__Default=Host=postgres;Port=5432;Database=${POSTGRES_DB};User Id=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - ConnectionStrings__MongoDB=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongo:27017
      - RabbitMq__Host=rabbitmq
      - RabbitMq__User=${RABBITMQ_USER}
      - RabbitMq__Password=${RABBITMQ_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_healthy

volumes:
  postgres-data:
  mongo-data: